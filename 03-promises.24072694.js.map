{"mappings":"YAqBA,SAASA,EAAcC,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,MACjC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,uBAAwCM,OAAfT,EAAS,QAAYS,OAANR,EAAM,QAEpDG,EAAK,sBAAqCK,OAAfT,EAAS,QAAYS,OAANR,EAAM,UAEnDA,MA9BWS,SAASC,cAAc,SAC/BC,iBAAiB,UAE3B,SAA0BC,GACxBA,EAAEC,iBAKF,IAJA,IAAMC,EAAeF,EAAEG,cAAcC,SACjChB,EAAQc,EAAad,MAAMiB,MAE3BC,GADOJ,EAAaK,KAAKF,MAChBH,EAAaI,OAAOD,OACxBlB,EAAW,EAAGA,GAAYmB,EAAQnB,IACzCF,EAAc,CAAEE,WAAUC,UACvBoB,MAAK,SAAAC,GACJC,QAAQC,IAAIF,MAEbG,OAAM,SAAAC,GACLH,QAAQC,IAAIE,MAGlBb,EAAEG,cAAcW,W","sources":["src/js/03-promises.js"],"sourcesContent":["const submitBtn = document.querySelector('.form');\nsubmitBtn.addEventListener('submit', onPositionAmount);\n\nfunction onPositionAmount(e) {\n  e.preventDefault();\n  const formElements = e.currentTarget.elements;\n  let delay = formElements.delay.value;\n  let step = formElements.step.value;\n  let amount = formElements.amount.value;\n  for (let position = 1; position <= amount; position++) {\n    createPromise({ position, delay })\n      .then(result => {\n        console.log(result);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n  e.currentTarget.reset();\n}\n\nfunction createPromise({ position, delay }) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay} ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay} ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$createPromise","param","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","document","querySelector","addEventListener","e","preventDefault","formElements","currentTarget","elements","value","amount","step","then","result","console","log","catch","error","reset"],"version":3,"file":"03-promises.24072694.js.map"}