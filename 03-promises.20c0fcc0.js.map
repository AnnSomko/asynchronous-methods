{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAkCA,SAASC,GAAcC,SAAEA,EAAQC,MAAEA,IACjC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MAzCWQ,SAASC,cAAc,SAC/BC,iBAAiB,UAE3B,SAA0BC,GACxBA,EAAEC,iBACF,MAAMC,EAAeF,EAAEG,cAAcC,SACrC,IAAIC,EAAQC,SAASJ,EAAab,MAAMkB,OACpCC,EAAOF,SAASJ,EAAaM,KAAKD,OAClCE,EAASH,SAASJ,EAAaO,OAAOF,OAE1C,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,IACzCvB,EAAc,CAAEC,SAAAsB,EAAUrB,MAAAgB,IACvBM,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqB1B,QAAiBC,WAGzCsB,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqB1B,QAAiBC,WAGzC0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBuB,EAAA3B,GAAS4B,OAAOG,QACd,sBAAoB5B,QAAeC,WAGzCgB,GAASG,EAEXR,EAAEG,cAAcc","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst submitBtn = document.querySelector('.form');\nsubmitBtn.addEventListener('submit', onPositionAmount);\n\nfunction onPositionAmount(e) {\n  e.preventDefault();\n  const formElements = e.currentTarget.elements;\n  let delay = parseInt(formElements.delay.value);\n  let step = parseInt(formElements.step.value);\n  let amount = parseInt(formElements.amount.value);\n\n  for (let position = 1; position <= amount; position++) {\n    createPromise({ position, delay })\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay} ms`\n        );\n      })\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay} ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay} ms`\n        );\n      });\n    delay += step;\n  }\n  e.currentTarget.reset();\n}\n\nfunction createPromise({ position, delay }) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","formElements","currentTarget","elements","delay1","parseInt","value","step","amount","position1","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.20c0fcc0.js.map"}