{"mappings":"AAqBA,SAASA,GAAcC,SAAEA,EAAQC,MAAEA,IACjC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,uBAAqBH,QAAiBC,QAE5CG,EAAK,sBAAoBJ,QAAeC,UAE3CA,MA9BWQ,SAASC,cAAc,SAC/BC,iBAAiB,UAE3B,SAA0BC,GACxBA,EAAEC,iBACF,MAAMC,EAAeF,EAAEG,cAAcC,SACrC,IAAIf,EAAQa,EAAab,MAAMgB,MAE3BC,GADOJ,EAAaK,KAAKF,MAChBH,EAAaI,OAAOD,OACjC,IAAK,IAAIjB,EAAW,EAAGA,GAAYkB,EAAQlB,IACzCD,EAAc,C,SAAEC,E,MAAUC,IACvBmB,MAAKC,IACJC,QAAQC,IAAIF,MAEbG,OAAMC,IACLH,QAAQC,IAAIE,MAGlBb,EAAEG,cAAcW","sources":["src/js/03-promises.js"],"sourcesContent":["const submitBtn = document.querySelector('.form');\nsubmitBtn.addEventListener('submit', onPositionAmount);\n\nfunction onPositionAmount(e) {\n  e.preventDefault();\n  const formElements = e.currentTarget.elements;\n  let delay = formElements.delay.value;\n  let step = formElements.step.value;\n  let amount = formElements.amount.value;\n  for (let position = 1; position <= amount; position++) {\n    createPromise({ position, delay })\n      .then(result => {\n        console.log(result);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n  e.currentTarget.reset();\n}\n\nfunction createPromise({ position, delay }) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay} ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay} ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","formElements","currentTarget","elements","value","amount","step","then","result","console","log","catch","error","reset"],"version":3,"file":"03-promises.18f82753.js.map"}